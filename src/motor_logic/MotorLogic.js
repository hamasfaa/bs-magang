function _0x46bd() { const _0x179c17 = [',\x20vy:\x20', 'vth', '123mVjunK', '9VCWbGn', '30EmEHky', 'round', '10698392CdcHQM', 'DEG2RAD', 'input\x20vx:\x20', 'motor2', 'roundToZero', 'motor1:\x20', 'angle2', 'forwardKinematic', '77RmTgiW', 'fkm', 'motor3', ',\x20vth:\x20', 'abs', '358451LIKCSj', 'output\x20vx:\x20', 'angle1', 'motor1', 'log', '143542wnXuzL', '141020HJgFzE', 'angle3', 'cos', '106572OHUbHN', '35102772zJSkHw', 'sin', '354ewcLBz', '60514xdaRKK']; _0x46bd = function () { return _0x179c17; }; return _0x46bd(); } const _0x486949 = _0x32d8; (function (_0x215000, _0xaece2a) { const _0x471f73 = _0x32d8, _0x29fc19 = _0x215000(); while (!![]) { try { const _0x58d792 = -parseInt(_0x471f73(0xa2)) / 0x1 + -parseInt(_0x471f73(0x8e)) / 0x2 * (-parseInt(_0x471f73(0x91)) / 0x3) + -parseInt(_0x471f73(0xab)) / 0x4 * (-parseInt(_0x471f73(0x93)) / 0x5) + -parseInt(_0x471f73(0x8d)) / 0x6 * (-parseInt(_0x471f73(0xa7)) / 0x7) + parseInt(_0x471f73(0x95)) / 0x8 * (parseInt(_0x471f73(0x92)) / 0x9) + -parseInt(_0x471f73(0xa8)) / 0xa * (-parseInt(_0x471f73(0x9d)) / 0xb) + -parseInt(_0x471f73(0xac)) / 0xc; if (_0x58d792 === _0xaece2a) break; else _0x29fc19['push'](_0x29fc19['shift']()); } catch (_0x36eabe) { _0x29fc19['push'](_0x29fc19['shift']()); } } }(_0x46bd, 0xba2d4)); import _0x5e91bd from '../motor_logic/Ikm.js'; import _0x91794b from '../motor_logic/Fkm.js'; import _0x4cba88 from '../motor_logic/Encoder.js'; function _0x32d8(_0x362923, _0x137da7) { const _0x46bdcb = _0x46bd(); return _0x32d8 = function (_0x32d852, _0x20398e) { _0x32d852 = _0x32d852 - 0x8c; let _0x1ce379 = _0x46bdcb[_0x32d852]; return _0x1ce379; }, _0x32d8(_0x362923, _0x137da7); } class MotorLogic { static [_0x486949(0xa4)] = 0x0; static [_0x486949(0x9b)] = 0x78; static [_0x486949(0xa9)] = 0xf0; static ['DEG2RAD'] = 0.017453292519943295; constructor(_0x1cca74) { this['fkm'] = _0x1cca74; } [_0x486949(0x9c)]() { const _0x442e9c = _0x486949, _0x1c3244 = MotorLogic[_0x442e9c(0xa4)] * MotorLogic[_0x442e9c(0x96)], _0x5b699c = MotorLogic[_0x442e9c(0x9b)] * MotorLogic['DEG2RAD'], _0xd74d0 = MotorLogic[_0x442e9c(0xa9)] * MotorLogic['DEG2RAD'], _0x3c78f5 = 0x2 / 0x3 * (this[_0x442e9c(0x9e)][_0x442e9c(0xa5)] * Math['cos'](_0x1c3244) + this[_0x442e9c(0x9e)]['motor2'] * Math[_0x442e9c(0xaa)](_0x5b699c) + this[_0x442e9c(0x9e)]['motor3'] * Math[_0x442e9c(0xaa)](_0xd74d0)), _0x6f255d = 0x2 / 0x3 * (this[_0x442e9c(0x9e)][_0x442e9c(0xa5)] * Math[_0x442e9c(0x8c)](_0x1c3244) + this['fkm']['motor2'] * Math[_0x442e9c(0x8c)](_0x5b699c) + this[_0x442e9c(0x9e)][_0x442e9c(0x9f)] * Math[_0x442e9c(0x8c)](_0xd74d0)), _0x5a5a89 = (this[_0x442e9c(0x9e)][_0x442e9c(0xa5)] + this[_0x442e9c(0x9e)][_0x442e9c(0x98)] + this[_0x442e9c(0x9e)][_0x442e9c(0x9f)]) / 0x3, _0x530767 = this['roundToZero'](_0x3c78f5), _0x311d43 = this['roundToZero'](_0x6f255d), _0x12cd76 = this[_0x442e9c(0x99)](_0x5a5a89); return console[_0x442e9c(0xa6)](_0x442e9c(0xa3) + _0x530767 + _0x442e9c(0x8f) + _0x311d43 + _0x442e9c(0xa0) + _0x12cd76), { 'vx': _0x530767, 'vy': _0x311d43, 'vth': _0x12cd76 }; } ['inverseKinematic'](_0x3d2f59) { const _0xf40f8b = _0x486949; console[_0xf40f8b(0xa6)](_0xf40f8b(0x97) + _0x3d2f59['vx'] + _0xf40f8b(0x8f) + _0x3d2f59['vy'] + _0xf40f8b(0xa0) + _0x3d2f59['vth']); const _0x5df4c0 = MotorLogic[_0xf40f8b(0xa4)] * MotorLogic[_0xf40f8b(0x96)], _0x4f85b1 = MotorLogic['angle2'] * MotorLogic[_0xf40f8b(0x96)], _0x1f367a = MotorLogic[_0xf40f8b(0xa9)] * MotorLogic[_0xf40f8b(0x96)]; let _0x1528bb = _0x3d2f59['vx'] * Math[_0xf40f8b(0xaa)](_0x5df4c0) + _0x3d2f59['vy'] * Math['sin'](_0x5df4c0) + _0x3d2f59[_0xf40f8b(0x90)], _0x409571 = _0x3d2f59['vx'] * Math[_0xf40f8b(0xaa)](_0x4f85b1) + _0x3d2f59['vy'] * Math['sin'](_0x4f85b1) + _0x3d2f59['vth'], _0x17322b = _0x3d2f59['vx'] * Math[_0xf40f8b(0xaa)](_0x1f367a) + _0x3d2f59['vy'] * Math[_0xf40f8b(0x8c)](_0x1f367a) + _0x3d2f59[_0xf40f8b(0x90)]; return _0x1528bb = this[_0xf40f8b(0x99)](_0x1528bb), _0x409571 = this[_0xf40f8b(0x99)](_0x409571), _0x17322b = this['roundToZero'](_0x17322b), console[_0xf40f8b(0xa6)](_0xf40f8b(0x9a) + _0x1528bb + ',\x20motor2:\x20' + _0x409571 + ',\x20motor3:\x20' + _0x17322b), { 'motor1': _0x1528bb, 'motor2': _0x409571, 'motor3': _0x17322b }; } [_0x486949(0x99)](_0x54b332, _0x4f20c0 = 0.00001) { const _0x21c2ba = _0x486949; if (Math[_0x21c2ba(0xa1)](_0x54b332) < _0x4f20c0) return 0x0; return Math[_0x21c2ba(0x94)](_0x54b332 * 0xf4240) / 0xf4240; } } export default MotorLogic;